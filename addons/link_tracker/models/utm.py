# -*- coding: utf-8 -*-
# Part of Odoo. See LICENSE file for full copyright and licensing details.

from odoo import fields, models


class UtmCampaign(models.Model):
    _inherit = ['utm.campaign']
    _description = 'UTM Campaign'

    click_count = fields.Integer(string="Number of clicks generated by the campaign", compute="_compute_clicks_count")

    def _compute_clicks_count(self):
        click_data = self.env['link.tracker.click'].read_group(
            [('campaign_id', 'in', self.ids)],
            ['campaign_id'], ['campaign_id'])

        mapped_data = {datum['campaign_id'][0]: datum['campaign_id_count'] for datum in click_data}

        for campaign in self:
            campaign.click_count = mapped_data.get(campaign.id, 0)

    def _get_ignored_merge_models(self):
        return super(UtmCampaign, self)._get_ignored_merge_models() + ['link.tracker']

    def _merge_utm_campaigns(self, campaign_to_keep, merge_values={}):
        """After merge the campaigns, redirect the link.tracker that link to old
        campaigns to the new merged campaign."""
        super(UtmCampaign, self)._merge_utm_campaigns(campaign_to_keep, merge_values)
        link_trackers = self.env['link.tracker'].sudo().search([('campaign_id', 'in', self.ids)])
        link_trackers._clean_duplicates()
        self._clean_merged_campaigns_reference('link.tracker', 'campaign_id', campaign_to_keep)
